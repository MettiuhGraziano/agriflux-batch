DROP TABLE IF EXISTS DATI_PRODUZIONE;
DROP TABLE IF EXISTS DATI_AMBIENTALI;
DROP TABLE IF EXISTS DATI_TERRENO;
DROP TABLE IF EXISTS DATI_COLTURA;
DROP TABLE IF EXISTS DATI_MORFOLOGICI;

DROP TABLE IF EXISTS BATCH_STEP_EXECUTION_CONTEXT;
DROP TABLE IF EXISTS BATCH_JOB_EXECUTION_CONTEXT;
DROP TABLE IF EXISTS BATCH_STEP_EXECUTION;
DROP TABLE IF EXISTS BATCH_JOB_EXECUTION_PARAMS;
DROP TABLE IF EXISTS BATCH_JOB_EXECUTION;
DROP TABLE IF EXISTS BATCH_JOB_INSTANCE;

DROP SEQUENCE IF EXISTS BATCH_STEP_EXECUTION_SEQ;
DROP SEQUENCE IF EXISTS BATCH_JOB_EXECUTION_SEQ;
DROP SEQUENCE IF EXISTS BATCH_JOB_SEQ;

-- Tabella dati coltura
CREATE TABLE DATI_COLTURA (
    ID_COLTURA BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    PRODOTTO_COLTIVATO VARCHAR(255),
    PREZZO_KG DECIMAL(5,2),
    DATA_SEMINA DATE,
    DATA_RACCOLTO DATE
);

-- Tabella dati ambientali
CREATE TABLE DATI_AMBIENTALI (
    ID_AMBIENTE BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    TEMPERATURA_MEDIA DECIMAL(5,2),
    UMIDITA_MEDIA DECIMAL(5,2),
    PRECIPITAZIONI DECIMAL(6,2),
    IRRAGGIAMENTO_MEDIO DECIMAL(5,2),
    OMBREGGIAMENTO_MEDIO DECIMAL(5,2),
    DATA_RILEVAZIONE DATE,
    FK_ID_COLTURA BIGINT,
    FOREIGN KEY (FK_ID_COLTURA) REFERENCES DATI_COLTURA(ID_COLTURA)
);

-- Tabella dati morfologici
CREATE TABLE DATI_MORFOLOGICI (
    ID_MORFOLOGIA BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    ESTENSIONE_TERRENO DECIMAL(6,2),
    PENDENZA BIGINT,
    ESPOSIZIONE VARCHAR(255),
    LITOLOGIA VARCHAR(255)
);

-- Tabella dati terreno
CREATE TABLE DATI_TERRENO (
    ID_RILEVAZIONE_TERRENO BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    PH_SUOLO DECIMAL(3,1),
    UMIDITA DECIMAL(5,2),
    CAPACITA_ASSORBENTE DECIMAL(5,2),
    POROSITA DECIMAL(5,2),
    TEMPERATURA DECIMAL(5,2),
	DISPONIBILITA_IRRIGUA BIGINT,
    DATA_RILEVAZIONE DATE,
	FK_ID_COLTURA BIGINT,
    FK_ID_MORFOLOGIA BIGINT,
	FOREIGN KEY (FK_ID_COLTURA) REFERENCES DATI_COLTURA(ID_COLTURA),
    FOREIGN KEY (FK_ID_MORFOLOGIA) REFERENCES DATI_MORFOLOGICI(ID_MORFOLOGIA)
);

-- Tabella dati produzione
CREATE TABLE DATI_PRODUZIONE (
    ID_PRODUZIONE BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    QUANTITA_RACCOLTO DECIMAL(10,2),
    QUANTITA_RACCOLTO_VENDUTO DECIMAL(10,2),
    FATTURATO_COLTURA DECIMAL(10,2),
    NUM_LAVORATORI INT,
    SPESE_ACCESSORIE DECIMAL(10,2),
    TEMPO_SEMINA INT,
    TEMPO_GERMINAZIONE INT,
    TEMPO_TRAPIANTO INT,
    TEMPO_MATURAZIONE INT,
    TEMPO_RACCOLTA INT,
    FK_ID_COLTURA BIGINT,
	FK_ID_MORFOLOGIA BIGINT,
    FOREIGN KEY (FK_ID_COLTURA) REFERENCES DATI_COLTURA(ID_COLTURA),
	FOREIGN KEY (FK_ID_MORFOLOGIA) REFERENCES DATI_MORFOLOGICI(ID_MORFOLOGIA)
);

CREATE TABLE BATCH_JOB_INSTANCE
(
    JOB_INSTANCE_ID BIGINT  NOT NULL PRIMARY KEY,
    VERSION BIGINT,
   	JOB_NAME VARCHAR(100) NOT NULL,
    JOB_KEY VARCHAR(32) NOT NULL,
    constraint JOB_INST_UN unique (JOB_NAME, JOB_KEY)
);

CREATE TABLE BATCH_JOB_EXECUTION  
(
    JOB_EXECUTION_ID BIGINT  NOT NULL PRIMARY KEY,
    VERSION BIGINT,
    JOB_INSTANCE_ID BIGINT NOT NULL,
    CREATE_TIME TIMESTAMP NOT NULL,
    START_TIME TIMESTAMP DEFAULT NULL,
    END_TIME TIMESTAMP DEFAULT NULL,
    STATUS VARCHAR(10),
    EXIT_CODE VARCHAR(2500),
    EXIT_MESSAGE VARCHAR(2500),
    LAST_UPDATED TIMESTAMP,
    constraint JOB_INST_EXEC_FK foreign key (JOB_INSTANCE_ID)
    references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
);

CREATE TABLE BATCH_JOB_EXECUTION_PARAMS
(
    JOB_EXECUTION_ID BIGINT NOT NULL,
    PARAMETER_NAME VARCHAR(100) NOT NULL,
    PARAMETER_TYPE VARCHAR(100) NOT NULL,
    PARAMETER_VALUE VARCHAR(2500),
    IDENTIFYING CHAR(1) NOT NULL,
    constraint JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

CREATE TABLE BATCH_STEP_EXECUTION
(
    STEP_EXECUTION_ID BIGINT  NOT NULL PRIMARY KEY,
    VERSION BIGINT NOT NULL,
    STEP_NAME VARCHAR(100) NOT NULL,
    JOB_EXECUTION_ID BIGINT NOT NULL,
    CREATE_TIME TIMESTAMP NOT NULL,
    START_TIME TIMESTAMP DEFAULT NULL,
    END_TIME TIMESTAMP DEFAULT NULL,
    STATUS VARCHAR(10),
    COMMIT_COUNT BIGINT,
    READ_COUNT BIGINT,
    FILTER_COUNT BIGINT,
    WRITE_COUNT BIGINT,
    READ_SKIP_COUNT BIGINT,
    WRITE_SKIP_COUNT BIGINT,
    PROCESS_SKIP_COUNT BIGINT,
    ROLLBACK_COUNT BIGINT,
    EXIT_CODE VARCHAR(2500),
    EXIT_MESSAGE VARCHAR(2500),
    LAST_UPDATED TIMESTAMP,
    constraint JOB_EXEC_STEP_FK foreign key (JOB_EXECUTION_ID)
    references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT
(
    STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
    SHORT_CONTEXT VARCHAR(2500) NOT NULL,
    SERIALIZED_CONTEXT TEXT,
    constraint STEP_EXEC_CTX_FK foreign key (STEP_EXECUTION_ID)
    references BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
);

CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT
(
    JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
    SHORT_CONTEXT VARCHAR(2500) NOT NULL,
    SERIALIZED_CONTEXT TEXT,
    constraint JOB_EXEC_CTX_FK foreign key (JOB_EXECUTION_ID)
    references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

CREATE SEQUENCE BATCH_STEP_EXECUTION_SEQ MAXVALUE 9223372036854775807 NO CYCLE;
CREATE SEQUENCE BATCH_JOB_EXECUTION_SEQ MAXVALUE 9223372036854775807 NO CYCLE;
CREATE SEQUENCE BATCH_JOB_SEQ MAXVALUE 9223372036854775807 NO CYCLE;